{"version":3,"sources":["Components/user/user.js","Components/interlocutor-message/interlocutor-message.js","Components/my-message/my-message.js","Layouts/chat/chat.js","Layouts/chatting-list/header/header.js","Components/chatting-list-item/chatting-list-item.js","Layouts/chatting-list/chatting-list.js","App.js","redux/actions.js","redux/helpers.js","redux/rootReducer.js","redux/store.js","index.js"],"names":["User","data","undefined","className","src","avatar","alt","name","InterlocutorMessage","date","text","MyMessage","Chat","state","message","divWithScroll","React","createRef","onInputChange","event","setState","target","value","onEnterDown","key","onSendingMessage","props","sendMessage","chatId","id","moment","Date","format","getMessage","alert","prevProps","prevState","snapshot","this","current","scrollTop","scrollTopMax","onKeyPress","ref","getMessages","chatting","onChange","type","placeholder","onClick","Component","map","Header","filter","onChangeFilter","ChattingListItem","onSelectItem","selectedItemIndex","itemClassName","length","makeShortMessage","newStr","i","defaultProps","ChattingList","item","App","onFilterData","filterValue","toLowerCase","includes","selectItem","changeFilter","filteredData","connect","store","dispatch","newId","payload","axios","method","url","then","res","newObj","setTimeout","newValue","getNewData","messageData","initialState","rootReducer","action","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7f85be63.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./user.css\"\r\n\r\nconst User = ({data}) => {\r\n    if (data !== undefined) {\r\n        return (\r\n            <div className='user'>\r\n                <img className='avatar' src={data.avatar} alt=\"\"/>\r\n                <i className=\"far fa-check-circle\"></i>\r\n                <span className='name'>{data.name}</span>\r\n            </div>\r\n        )\r\n    } else return null;\r\n};\r\nexport default User;","import React from \"react\";\r\nimport \"./interlocutor-message.css\"\r\n\r\nconst InterlocutorMessage = ({date,text,avatar})=>{\r\n    return(\r\n        <div className='interlocutor-message'>\r\n            <img className='message-avatar' src={avatar} alt=\"img\"/>\r\n            <div className='message-container'>\r\n            <p className='message-text'>{text}</p>\r\n            <span className='message-date'>{date}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default InterlocutorMessage;","import React from \"react\";\r\nimport \"./my-message.css\"\r\n\r\nconst MyMessage = ({text,date})=>{\r\n    return(\r\n        <div className='my-message'>\r\n        <div className='message-container'>\r\n            <p className='message-text  my-ms'>{text}</p>\r\n            <span className='message-date my-ms-date'>{date}</span>\r\n        </div>\r\n    </div>);\r\n};\r\nexport default MyMessage;","import React, {Component} from 'react';\r\nimport User from \"../../Components/user/user\";\r\nimport InterlocutorMessage from \"../../Components/interlocutor-message/interlocutor-message\";\r\nimport moment from \"moment\";\r\nimport \"./chat.css\"\r\nimport MyMessage from \"../../Components/my-message/my-message\";\r\n\r\nclass Chat extends Component {\r\n    state = {\r\n        message: ''\r\n    };\r\n    divWithScroll = React.createRef();\r\n    onInputChange = (event) => {\r\n        this.setState({message: event.target.value})\r\n    };\r\n    onEnterDown = (event) => {\r\n        if (event.key === 'Enter') {\r\n            this.onSendingMessage(this.state.message)\r\n        }\r\n    };\r\n    onSendingMessage = (message) => {\r\n        if (this.state.message !== '') {\r\n            this.props.sendMessage({\r\n                text: message,\r\n                chatId: this.props.data.id,\r\n                id: 'my-message',\r\n                date: moment(new Date()).format('LLL')\r\n            });\r\n            this.props.getMessage(this.props.data.id);\r\n            this.setState({message: ''})\r\n        } else alert(\"message can't be empty\")\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        this.divWithScroll.current.scrollTop = this.divWithScroll.current.scrollTopMax;\r\n    }\r\n\r\n    render() {\r\n        const {data} = this.props;\r\n        return (\r\n\r\n            <div className='chat' onKeyPress={(event) => this.onEnterDown(event)}>\r\n                <div className='chat-header'>\r\n                    <User data={data}/>\r\n                </div>\r\n                <div className='chatting-view' ref={this.divWithScroll}>\r\n                    {getMessages(data.chatting, data.avatar)}\r\n                </div>\r\n                <div className='chat-footer'>\r\n                    <div className='message-field'>\r\n                        <input value={this.state.message} onChange={event => this.onInputChange(event)} type=\"text\"\r\n                               placeholder='Type your message'/>\r\n                        <i className=\"fas fa-paper-plane\" onClick={() => this.onSendingMessage(this.state.message)}></i>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst getMessages = (chatting, avatar) => {\r\n    return chatting.map(message => {\r\n        switch (message.id) {\r\n            case 'my-message':\r\n                return <MyMessage date={message.date} text={message.text}/>;\r\n            case 'interlocutor-message':\r\n                return <InterlocutorMessage avatar={avatar} date={message.date} text={message.text}/>;\r\n            default:\r\n                return null\r\n        }\r\n    })\r\n};\r\n\r\nexport default Chat;","import React from \"react\";\r\nimport \"./header.css\"\r\n\r\nexport default class Header extends React.Component {\r\n    state = {\r\n        filter: ''\r\n    };\r\n    onInputChange = (event) => {\r\n        this.props.onChangeFilter(event.target.value);\r\n        this.setState({filter: event.target.value});\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className='header'>\r\n                <div className='user-header'>\r\n                    <img className='avatar-header' src='https://randomuser.me/api/portraits/men/22.jpg' alt=\"\"/>\r\n                    <i className=\"far fa-check-circle\"></i>\r\n                    <span className='name-header'>Maksym Ozymok</span>\r\n                </div>\r\n                <input value={this.state.filter} onChange={event => this.onInputChange(event)} className='search'\r\n                       type=\"search\" placeholder={`Search or start new chat`}/>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\n","import React from \"react\";\r\nimport \"./chatting-list-item.css\"\r\n\r\nconst ChattingListItem = ({data,onSelectItem,selectedItemIndex}) => {\r\n      const {id,name,avatar,chatting} = data;\r\n      let itemClassName = 'chatting-list-item';\r\n      if(id===selectedItemIndex) itemClassName+= ' selected';\r\n          return (\r\n              <div className={itemClassName} onClick={() => onSelectItem(id)}>\r\n                  <img className='avatar-item' src={avatar} alt=\"avatar\"/>\r\n                  <i className=\"far fa-check-circle icon\"></i>\r\n                  <span className='name-item'>{name}</span>\r\n                  { chatting.length>0? <><span className='date-item'>{chatting[chatting.length - 1].date}</span>\r\n                  <p className='message-item'>{makeShortMessage(chatting[chatting.length - 1].text)}</p>\r\n                  </>:null}\r\n              </div>\r\n          )\r\n};\r\nconst makeShortMessage = (text)=>{\r\n    let newStr = '';\r\n    for(let i=0;i<100;i++){\r\n        if(text[i]!==undefined)\r\n        newStr+=text[i];\r\n    }\r\n    return newStr + '...'\r\n};\r\nChattingListItem.defaultProps = {\r\n    name: 'Name',\r\n    avatar : 'https://randomuser.me/api/portraits/men/22.jpg',\r\n};\r\nexport default ChattingListItem","import React, {Component} from 'react';\r\nimport \"./chatting-list.css\"\r\nimport Header from \"./header/header\";\r\nimport ChattingListItem from \"../../Components/chatting-list-item/chatting-list-item\";\r\n\r\nclass ChattingList extends Component {\r\n    render() {\r\n\r\n        return (\r\n            <div className='chatting-list'>\r\n                <Header onChangeFilter={this.props.onChangeFilter}/>\r\n                <p className='chatting-list-header'>Chats</p>\r\n                {\r\n                    this.props.data.map(item => <ChattingListItem selectedItemIndex={this.props.selectedItemIndex}\r\n                                                                  key={item.id} data={item}\r\n                                                                  onSelectItem={this.props.onSelectItem}/>)\r\n                }\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default ChattingList;","import React, {Component} from 'react';\nimport {connect} from \"react-redux\"\nimport Chat from \"./Layouts/chat/chat\";\nimport ChattingList from \"./Layouts/chatting-list/chatting-list\";\nimport {changeFilter, getMessage, selectItem, sendMessage} from \"./redux/actions\";\nimport \"./index.css\"\n\nclass App extends Component {\n\n    onFilterData = (filterValue, data) => {\n        return data.filter(item => item.name.toLowerCase().includes(filterValue.toLowerCase()))\n    };\n\n    render() {\n        const {filter, data, selectedItemIndex, selectItem, sendMessage, getMessage, changeFilter} = this.props;\n        const filteredData = this.onFilterData(filter, data);\n        return (\n            <div className=\"app\">\n                <ChattingList data={filteredData}\n                              onSelectItem={selectItem}\n                              onChangeFilter={changeFilter}\n                              selectedItemIndex={selectedItemIndex}/>\n                <Chat data={data[selectedItemIndex]} sendMessage={sendMessage} getMessage={getMessage}/>\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        selectItem: (newId) => dispatch(selectItem(newId)),\n        sendMessage: (message) => dispatch(sendMessage(message)),\n        getMessage: (chatId) => dispatch(getMessage(chatId)),\n        changeFilter: (newValue) => dispatch(changeFilter(newValue))\n    }\n};\n\nconst mapStateToProps = (store) => {\n    return {\n        data: store.data,\n        selectedItemIndex: store.selectedItemIndex,\n        filter: store.filter\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import axios from \"axios\"\r\nimport moment from \"moment\";\r\n\r\nexport const SELECT_ITEM = 'SELECT_ITEM';\r\nexport const SEND_MESSAGE = 'SEND_MESSAGE';\r\nexport const GET_MESSAGE_REQUEST = 'GET_MESSAGE_REQUEST';\r\nexport const GET_MESSAGE_SUCCESS = 'GET_MESSAGE_SUCCESS';\r\nexport const CHANGE_FILTER = 'CHANGE_FILTER';\r\n\r\nexport const selectItem = (newId) => {\r\n    return {\r\n        type: SELECT_ITEM,\r\n        payload: newId\r\n    }\r\n};\r\nexport const sendMessage = (message) => {\r\n    return {\r\n        type: SEND_MESSAGE,\r\n        payload: message\r\n    }\r\n};\r\nconst getMessageRequest = () => {\r\n    return {\r\n        type: GET_MESSAGE_REQUEST\r\n    }\r\n};\r\nconst getMessageSuccess = (message) => {\r\n    return {\r\n        type: GET_MESSAGE_SUCCESS,\r\n        payload: message\r\n    }\r\n};\r\n\r\nexport const getMessage = (chatId) => {\r\n    return dispatch => {\r\n        dispatch(getMessageRequest());\r\n        axios({\r\n            method: 'get',\r\n            url: 'https://api.chucknorris.io/jokes/random'\r\n        }).then(res => {\r\n            const newObj = {\r\n                chatId,\r\n                id: 'interlocutor-message',\r\n                text: res.data.value,\r\n                date: moment(new Date()).format('LLL')\r\n            };\r\n            setTimeout(() => dispatch(getMessageSuccess(newObj)), 1500);\r\n        });\r\n    }\r\n};\r\nexport const changeFilter = (newValue) => {\r\n    return {\r\n        type: CHANGE_FILTER,\r\n        payload: newValue\r\n    }\r\n};\r\n","export const getNewData = (data, messageData) => {\r\n    return data.map(value => {\r\n        if (messageData.chatId === value.id) {\r\n            value['chatting'] = [...value.chatting, messageData];\r\n            return value;\r\n        } else return value;\r\n    });\r\n};","import {CHANGE_FILTER, GET_MESSAGE_REQUEST, GET_MESSAGE_SUCCESS, SELECT_ITEM, SEND_MESSAGE} from \"./actions\";\r\nimport {getNewData} from \"./helpers\";\r\n\r\nconst initialState = {\r\n    filter: '',\r\n    selectedItemIndex: 0,\r\n    data: [\r\n\r\n        {\r\n            id: 0,\r\n            name: 'name name',\r\n            avatar: 'https://randomuser.me/api/portraits/men/22.jpg',\r\n            chatting: [\r\n                {\r\n                    id: 'my-message',\r\n                    text: 'Lorem ipsum dolor sit amet',\r\n                    date: 'June 5, 2020 2:32 PM'\r\n                },\r\n                {\r\n                    id: 'my-message',\r\n                    text: 'Lorem ipsum dolor sit amet',\r\n                    date: 'June 5, 2020 2:32 PM'\r\n                }, {\r\n                    id: 'my-message',\r\n                    text: 'Lorem ipsum dolor sit amet',\r\n                    date: 'June 5, 2020 2:32 PM'\r\n                },\r\n                {\r\n                    id: 'interlocutor-message',\r\n                    text: 'Lorem ipsum dolor sit amet',\r\n                    date: 'June 5, 2020 2:32 PM'\r\n                }\r\n\r\n            ]\r\n        },\r\n        {\r\n            id: 1,\r\n            name: 'Frank Arni',\r\n            avatar: 'https://randomuser.me/api/portraits/men/72.jpg',\r\n            chatting: [\r\n                {\r\n                    id: 'my-message',\r\n                    text: 'Lorem ipsum dolor sit amet',\r\n                    date: 'June 5, 2020 2:32 PM'\r\n                },\r\n                {\r\n                    id: 'my-message',\r\n                    text: ' sit amet',\r\n                    date: 'June 5, 2020 2:32 PM'\r\n                }, {\r\n                    id: 'my-message',\r\n                    text: 'Lorem t',\r\n                    date: 'June 5, 2020 2:32 PM'\r\n                },\r\n                {\r\n                    id: 'interlocutor-message',\r\n                    text: 'Lorem ipsum dolor sit a  sdfssdf met',\r\n                    date: 'June 5, 2020 2:32 PM'\r\n                }\r\n\r\n            ]\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'John Vasyl',\r\n            avatar: 'https://randomuser.me/api/portraits/men/81.jpg',\r\n            chatting: []\r\n        },\r\n        {\r\n            id: 3,\r\n            name: 'Sofia Biletska',\r\n            avatar: 'https://randomuser.me/api/portraits/women/68.jpg',\r\n            chatting: []\r\n        },\r\n        {\r\n            id: 4,\r\n            name: 'Taras Renil',\r\n            avatar: 'https://randomuser.me/api/portraits/men/0.jpg',\r\n            chatting: []\r\n        }\r\n    ]\r\n};\r\n\r\nconst rootReducer = (store = initialState, action) => {\r\n    switch (action.type) {\r\n        case SELECT_ITEM:\r\n            return {...store, selectedItemIndex: action.payload};\r\n        case SEND_MESSAGE:\r\n            return {...store, data: getNewData(store.data, action.payload)};\r\n        case GET_MESSAGE_REQUEST:\r\n            return {...store};\r\n        case GET_MESSAGE_SUCCESS:\r\n            return {...store, data: getNewData(store.data, action.payload)};\r\n        case CHANGE_FILTER:\r\n            return {...store, filter: action.payload};\r\n        default:\r\n            return {...store}\r\n    }\r\n\r\n};\r\nexport default rootReducer;","import {applyMiddleware, createStore} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport rootReducer from \"./rootReducer\";\r\n\r\nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {Provider} from \"react-redux\"\nimport {store} from \"./redux/store\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n);"],"sourceRoot":""}